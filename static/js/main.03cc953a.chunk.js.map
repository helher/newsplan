{"version":3,"sources":["images/teamplan_image.jpg","components/footer/Footer.js","components/buttons/LoadButton/LoadButton.js","components/buttons/AddEmployeeButton/AddEmployeeButton.js","screens/TeamPlan.js","components/buttons/AddIdeaButton/AddIdeaButton.js","components/popups/popupConversions.js","database/REST.js","components/title-edit/TitleEdit.js","components/buttons/SaveButton/SaveButton.js","components/buttons/DiscardButton/DiscardButton.js","components/buttons/CloseWindow/CloseWindow.js","components/dropdowns/dropdown-visibility/DropdownVisibility.js","components/dropdowns/dropdown-calendar/DropdownCalendar.js","components/rich-text-editor/RichTextEdior.js","components/created-by/CreatedByNew.js","components/dropdowns/section/Section.js","components/popups/popup-idea-new/PopupIdeaNew.js","database/articleRole.js","components/dropdowns/dropdown-length/DropdownLength.js","components/created-by/CreatedByArticle.js","components/dropdowns/assign-employee/AssignEmployee.js","components/dropdowns/assign-workload/AssignWorkload.js","components/buttons/SaveButtonSmall/SaveButtonSmall.js","components/dropdowns/job-dropdown-form/JobForm.js","components/buttons/DiscardButtonSmall/DiscardButtonSmall.js","components/job-list/JobList.js","components/comment-form/CommentForm.js","components/comment-list/CommentList.js","components/buttons/ProceedButton/ProceedButton.js","components/popups/popup-article/PopupArticle.js","components/created-by/CreatedBy.js","components/popups/popup-idea/PopupIdea.js","components/label/Label.js","components/columns/IdeaColumn.js","components/columns/Loui_Avatar.png","components/statusbar/Statusbar.js","components/columns/ArticleColumn.js","components/columns/ColumnOnHold.js","screens/Dashboard.js","database/cloud.js","screens/Ideas.js","screens/Articles.js","images/login_image.jpg","components/login/Login.js","screens/LoginScreen.js","components/bottom-avatar/BottomAvatar.js","components/nav/NavigationBar.js","components/logout/Logout.js","App.js","index.js"],"names":["Footer","LoadButton","text","className","onClick","console","log","class","AddEmployeeButton","TeamPlan","src","teamImage","alt","AddIdeaButton","setPopupNew","convertDateObjectToString","date","newMonth","month","newDay","day","JSON","stringify","newDateString","year","substring","length","convertDateStringToObject","stringArr","split","dateObject","indexOf","parseInt","convertToPlain","description","temporaryText","document","createElement","innerHTML","textContent","innerText","deleteArticle","articleId","a","fetch","method","headers","process","alert","message","deleteIdea","ideaId","updateIdea","updateData","body","response","ok","status","Error","json","data","TitleEdit","title","setTitle","placeholder","type","value","onChange","e","target","SaveButton","saveAction","DiscardButton","discardAction","CloseWindow","closeAction","DropdownVisibility","visibility","setVisibility","useState","isActive","setIsActive","readResults","setReadResults","visibilityOptions","useEffect","readWorkload","query","Parse","Query","find","visibilityOption","forEach","push","get","map","DropdownCalendar","setDate","inputPlaceholder","formatInputText","inputClassName","RichTextEditor","setDescription","editor","ClassicEditor","config","event","getData","CreatedBy","username","User","current","Section","section","setSection","sections","readSections","PopupIdeaNew","props","clearPopup","handlePopupIdeaNew","Idea","Object","extend","newIdea","set","save","result","id","popupNew","CreatedByNew","children","jobArray","include","equalTo","job","DropdownLength","setLength","lengthOptions","lengthOption","CreatedByArticle","ideaAuthor","AssignEmployee","selectedEmployee","setSelectedEmployee","setEmployeeId","employees","readEmployees","employee","chosenEmployeeInfo","AssignWorkload","workload","setWorkload","durationArray","readWorkLoad","SaveButtonSmall","JobForm","setHasAssignedJobs","setAssignedJob","employeeId","updateAvailability","assignedEmployee","addJobToDB","ArticleRole","newRole","employeeObject","saveJob","DiscardButtonSmall","JobList","jobListResult","url","CommentForm","user","author","image","activeComment","setActiveComment","commentInput","setCommentInput","updateCommentList","descending","comments","setCommentResult","IdeaComment","newComment","CommentList","commentResult","undefined","dataSource","renderItem","item","Item","toString","ProceedButton","proceedAction","PopupArticle","setIdeaId","setIdeaAuthor","hasAssignedJobs","assignedJob","setJobListResult","ideaCardObject","initialDeadline","articleCardObject","deadline","objectId","Article","setPopupArticle","setArticleStateInfoFromIdea","setArticleState","readJobList","then","jobList","popupArticle","PopupIdea","setAuthor","expiration","setPopup","newArticle","latestArticle","setArticleId","error","setIdeaInfo","popup","Labels","sectionName","Color","color","style","backgroundColor","IdeaColumn","Ideas","ideas","destructuredIdeas","destructureIdeas","setCardIdeaTable","cardIdeaTable","destructure","idea","userImage","getIdeaCard","card","setIdeaCardObject","handleClickIdeaPopup","Statusbar","ColorWidth","width","ArticleColumn","articleObjects","notEqualTo","articles","setColumn","column","article","getArticleCard","columnTitle","setArticleCardObject","Loui_Avatar","ColumnOnHold","setColumnOnHold","columnOnHold","Dashboard","columnToday","setColumnToday","columnTomorrow","setColumnTomorrow","columnDATomorrow","setColumnDATomorrow","today","Date","tomorrow","getDate","dayAfterTomorrow","Cloud","run","columns","field","headerName","editable","renderCell","params","sortable","ideaTable","setIdeaTable","cloudResult","setCloudResult","fetchIdeas","cloudSumIdea","sum","rows","pageSize","rowsPerPageOptions","Articles","articleTable","setArticleTable","destructuredArticles","destructureArticle","cloudSumArticle","Login","setUsername","password","setPassword","img","Form","Group","controlId","Label","Control","Button","preventDefault","logIn","loggedInUser","setIsLoggedIn","variant","LoginScreen","BottomAvatar","display","padding","size","Avatar","border","marginTop","marginBottom","marginLeft","height","NavigationBar","to","Logout","App","isLoggedIn","path","element","exact","initialize","serverURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03cc953a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/teamplan_image.f6149097.jpg\";","import React from 'react';\n\n// Styles\nimport './footer.css'\n\n\nfunction Footer() {\n    \n    return (\n        <>\n        </>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { IoReloadOutline } from 'react-icons/io5';\n\n// Styles\nimport './LoadButton.css';\n\nconst LoadButton = ({\n    text\n}) => {\n\n    function handleClickLoading() {\n        console.log(\"load button clicked!\")\n    }\n\n\n    return (\n        <button className=\"load-iconbtn\" onClick={handleClickLoading}  >\n            <div class=\"button-text-white\">\n                <IoReloadOutline className=\"load-icon\"/>{text}\n            </div>\n        </button>\n    )\n}\n\nexport default LoadButton;\n\n","import React from \"react\";\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\n\n// Styles\nimport \"./AddEmployeeButton.css\";\n\nconst AddEmployeeButton = ({ text }) => {\n  function handleClickPopup() {}\n\n  return (\n    <button className=\"addemployee-iconbtn\" onClick={handleClickPopup}>\n      <div class=\"button-text-white\">\n        <IoIosAddCircleOutline className=\"addemployee-icon\" />\n        {text}\n      </div>\n    </button>\n  );\n};\n\nexport default AddEmployeeButton;\n","import React from \"react\";\n\n// Styles\nimport \"./Teamplan.css\";\n\n// Images\nimport teamImage from \"../images/teamplan_image.jpg\";\n\n// components\nimport Footer from \"../components/footer/Footer\";\nimport LoadButton from \"../components/buttons/LoadButton/LoadButton\";\nimport AddEmployeeButton from \"../components/buttons/AddEmployeeButton/AddEmployeeButton\";\n\nconst TeamPlan = () => {\n  return (\n    <>\n      <div className=\"teamplan\">\n          <img className=\"teamplan-img\" src={teamImage} alt=\"teamplan\"/>\n          <div className=\"teamplan-header\">\n          <h1 >Under Construction</h1>\n          <p>This page is under construction, but feel free to explore the other pages</p>\n          </div>\n      </div>\n      <div className=\"footer-container\">\n        <div className=\"footerteamplan-btns\">\n          <AddEmployeeButton text=\"Add Employee\" />\n          <LoadButton text=\"Load more Employees\" />\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default TeamPlan;\n\n\n","import React from \"react\";\nimport { IoIosAddCircleOutline } from \"react-icons/io\";\n\n// Styles\nimport \"./AddIdeaButton.css\";\n\nconst AddIdeaButton = ({ text, setPopupNew }) => {\n  function handleClickPopup() {\n    console.log(\"bt clicked!\");\n    setPopupNew(true);\n  }\n\n  return (\n    <button className=\"addidea-iconbtn\" onClick={handleClickPopup}>\n      <div class=\"button-text-white\">\n        <IoIosAddCircleOutline className=\"addidea-icon\" />\n        {text}\n      </div>\n    </button>\n  );\n};\n\nexport default AddIdeaButton;\n","\nexport function convertDateObjectToString(date) {\n    let month = `${date.month}`;\n    const months = [\n      \"\", \"Jan\", \"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\n    ]\n    let newMonth = months[month];\n    \n    let newDay = date.day\n\n    if (newDay < 10) {\n      newDay = 0 + JSON.stringify(date.day)\n    } \n\n    const newDateString = JSON.stringify(\n      `${newMonth} ${newDay} ${date.year}`\n    );\n    const completeNewDateString = newDateString.substring(\n      1,\n      newDateString.length - 1\n    );\n\n    return completeNewDateString;\n  }\n\n\nexport function convertDateStringToObject(date) {\n    const stringArr = date.split(\" \");\n\n    const dateObject = {\n      day: stringArr[1],\n      month: stringArr[0],\n      year: stringArr[2]\n    }\n\n    let month = `${dateObject.month}`\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n    let newMonth = months.indexOf(month)\n\n    const newDateObject = {\n      day: parseInt(stringArr[1]),\n      month: newMonth+1,\n      year: parseInt(stringArr[2])\n    }\n\n    return newDateObject\n  }\n\n    // This code is from https://dev.to/sanchithasr/3-ways-to-convert-html-text-to-plain-text-52l8\n    export function convertToPlain(description) {\n        var temporaryText = document.createElement(\"div\");\n        temporaryText.innerHTML = description;\n        return temporaryText.textContent || temporaryText.innerText || \"\";\n      }","export async function deleteArticle(articleId) {\n  try {\n    await fetch(`https://parseapi.back4app.com/classes/Article/${articleId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-Parse-Application-Id\": `${process.env.REACT_APP_APPLICATION_ID}`,\n        \"X-Parse-REST-API-Key\": `${process.env.REACT_APP_REST_API_KEY}`\n      },\n    });\n  } catch (error) {\n    alert(`Error! ${error.message}`);\n  }\n}\n\nexport async function deleteIdea(ideaId) {\n  try {\n    await fetch(`https://parseapi.back4app.com/classes/Idea/${ideaId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"X-Parse-Application-Id\": `${process.env.REACT_APP_APPLICATION_ID}`,\n        \"X-Parse-REST-API-Key\": `${process.env.REACT_APP_REST_API_KEY}`\n      },\n    });\n  } catch (error) {\n    alert(`Error! ${error.message}`);\n  }\n}\n\n\nexport async function updateIdea(ideaId, updateData) {\n  try {\n    const response = await fetch(\n      `https://parseapi.back4app.com/classes/Idea/${ideaId}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"X-Parse-Application-Id\": `${process.env.REACT_APP_APPLICATION_ID}`,\n          \"X-Parse-REST-API-Key\": `${process.env.REACT_APP_REST_API_KEY}`\n        },\n        body: JSON.stringify(updateData),\n      }\n    );\n\n    if (!response.ok) {\n      const message = \"Error with Status Code: \" + response.status;\n      throw new Error(message);\n    }\n\n    const data = await response.json();\n    console.log(data);\n  } catch (error) {\n    console.log(\"Error: \" + error);\n  }\n}\n\n// Needs updates in order to work!\nexport async function getUser(userId) {\n  try {\n    await fetch(`https://parseapi.back4app.com/User/${userId}`, {\n      method: \"GET\",\n      headers: {\n        \"X-Parse-Application-Id\": `${process.env.REACT_APP_APPLICATION_ID}`,\n        \"X-Parse-REST-API-Key\": `${process.env.REACT_APP_REST_API_KEY}`\n      },\n    });\n  } catch (error) {\n    alert(`Error! ${error.message}`);\n  }\n}\n","import React from \"react\";\n\n// Styles\nimport \"./TitleEdit.css\";\n\nconst TitleEdit = ({ title, setTitle }) => {\n  function newTitle(e) {\n    setTitle(e.target.value);\n  }\n\n  return (\n    <input\n      className=\"text-input\"\n      placeholder=\"Add a title here..\"\n      type=\"text\"\n      value={title}\n      onChange={newTitle}\n    />\n  );\n};\n\nexport default TitleEdit;\n","import React from \"react\";\n\n// Styles\nimport \"./SaveButton.css\";\n\nconst SaveButton = ({ saveAction }) => {\n  return (\n    <div>\n      <button className=\"save-btn\" onClick={saveAction}>\n        <div class=\"button-text-white\">Save</div>\n      </button>\n    </div>\n  );\n};\n\nexport default SaveButton;\n","import React from \"react\";\n\n// Styles\nimport \"./DiscardButton.css\";\n\nconst DiscardButton = ({ text, discardAction }) => {\n  return (\n    <div>\n      <button className=\"discard-btn\" onClick={discardAction}>\n        <div class=\"discardbutton-text\">{text}</div>\n      </button>\n    </div>\n  );\n};\n\nexport default DiscardButton;\n","import React from \"react\";\nimport { IoIosCloseCircleOutline } from \"react-icons/io\";\n\n// Styles\nimport \"./CloseWindow.css\";\n\nconst CloseWindow = ({ closeAction }) => {\n  return (\n    <button className=\"close-button\">\n      <IoIosCloseCircleOutline className=\"closing-tag\" onClick={closeAction} />\n    </button>\n  );\n};\n\nexport default CloseWindow;\n","import React, { useState, useEffect } from \"react\";\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./DropdownVisibility.css\";\n\nfunction DropdownVisibility({ visibility, setVisibility }) {\n  const [isActive, setIsActive] = useState(false);\n  const [readResults, setReadResults] = useState([]);\n  let visibilityOptions = [];\n\n  useEffect(() => {\n    readWorkload();\n  }, []);\n\n  useEffect(() => {}, [readResults]);\n\n  const readWorkload = async function () {\n    let query = new Parse.Query(\"Visibility\");\n    let visibilityOption = await query.find();\n\n    try {\n      visibilityOption.forEach((visibilityOption) => {\n        visibilityOptions.push(visibilityOption.get(\"name\"));\n      });\n\n      setReadResults(visibilityOptions);\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"dropdown\" onClick={readWorkload}>\n      <h5>Visibility</h5>\n      <div className=\"dropdown-select\">\n        <div className=\"dropdown-btn\" onClick={() => setIsActive(!isActive)}>\n          {!visibility && <p>Select</p>}\n          <div className=\"selected-visibility\">{visibility}</div>\n          <div className=\"space\"></div>\n          <IoMdArrowDropdownCircle className=\"dropdown-icon\" />\n        </div>\n          {isActive && (\n            <div className=\"dropdown-content\">\n              {readResults.map((visibilityOption) => (\n                <div\n                  onClick={(e) => {\n                    console.log(\"is the fail happening here?\");\n                    setVisibility(visibilityOption);\n                    setIsActive(false);\n                  }}\n                  className=\"dropdown-item\"\n                >\n                  <h6>{visibilityOption}</h6>\n                </div>\n              ))}\n            </div>\n          )}\n      </div>\n    </div>\n  );\n}\n\nexport default DropdownVisibility;\n","import React from 'react';\n\n// Styles\nimport './DropdownCalendar.css';\n\n// Calender\nimport DatePicker from 'react-modern-calendar-datepicker';\n\nconst DropdownCalendar = ({date, setDate}) => {\n\n    const formatInputValue = () => {\n      if (!date) return '';\n\n      let month = `${date.month}`\n      const months = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n\n      let newMonth = months[month]\n\n      return `${newMonth} ${date.day} ${date.year}`;\n    }\n\n    return (\n        <>\n        <DatePicker\n            value={date}\n            onChange={setDate}\n            inputPlaceholder=\"Select\"\n            formatInputText={formatInputValue}\n            inputClassName=\"datePicker\"\n        />\n            </>\n    );\n  };\n\nexport default DropdownCalendar;","import React from \"react\";\n\n// Styles\nimport \"./RichTextEditor.css\";\n\n// Third Party Editors\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nfunction RichTextEditor({ description, setDescription }) {\n  return (\n    <div className=\"text-editor\">\n      <CKEditor\n        editor={ClassicEditor}\n        config={{ placeholder: \"Describe your idea...\" }}\n        data={description}\n        onChange={(event, editor) => {\n          const data = editor.getData();\n          setDescription(data);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default RichTextEditor;\n","import React from 'react';\nimport Parse from 'parse';\nimport { BiBrain } from 'react-icons/bi';\n\n// Styles\nimport './CreatedBy.css'\n\nfunction CreatedBy() {\n\n    const username = (Parse.User.current()).get(\"username\")\n\n    return (\n        <div className=\"logo-and-id\">\n            <BiBrain className=\"idea-icon\"/>\n            <p className=\"createdby-text\"><b>Idea</b> created by {username}</p>\n        </div>\n    )\n    \n}\n\nexport default CreatedBy","import React, { useState, useEffect } from \"react\";\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./Section.css\";\n\nfunction Section({ section, setSection }) {\n  const [isActive, setIsActive] = useState(false);\n  const [readResults, setReadResults] = useState([]);\n  let sections = [];\n\n  useEffect(() => {\n    readSections();\n  }, []);\n\n  const readSections = async function () {\n    let query = new Parse.Query(\"Section\");\n\n    let section = await query.find();\n    try {\n      section.forEach((section) => {\n        sections.push(section.get(\"name\"));\n      });\n      setReadResults(sections);\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"section-dropdown\">\n        <h5>Section</h5>\n        <div className=\"dropdown-btn\" onClick={() => setIsActive(!isActive)}>\n          {!section ? (\n            <p>Select</p>\n          ) : (\n            <p className=\"selected-section\">{section}</p>\n          )}\n          <div className=\"space\"></div>\n          <IoMdArrowDropdownCircle className=\"dropdown-icon\" />\n        </div>\n        {isActive && (\n          <div className=\"section-dropdown-content\">\n            {readResults.map((section) => (\n              <div\n                onClick={(e) => {\n                  console.log(\"is the fail happening here?\");\n                  setSection(section);\n                  setIsActive(false);\n                }}\n                className=\"dropdown-item\"\n              >\n                <h6>{section}</h6>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Section;\n","import React, { useState } from \"react\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./../Popup.css\";\n\n// functions\nimport { convertDateObjectToString } from \"../popupConversions\";\nimport { convertToPlain } from \"../popupConversions\";\nimport { createIdea } from \"../../../database/REST\";\n\n//components\nimport TitleEdit from \"../../title-edit/TitleEdit\";\nimport SaveButton from \"../../buttons/SaveButton/SaveButton\";\nimport DiscardButton from \"../../buttons/DiscardButton/DiscardButton\";\nimport CloseWindow from \"../../buttons/CloseWindow/CloseWindow\";\nimport DropdownVisibility from \"../../dropdowns/dropdown-visibility/DropdownVisibility\";\nimport DropdownCalendar from \"../../dropdowns/dropdown-calendar/DropdownCalendar\";\nimport RichTextEditor from \"../../rich-text-editor/RichTextEdior\";\nimport CreatedByNew from \"../../created-by/CreatedByNew\";\nimport Section from \"../../dropdowns/section/Section\";\n\nfunction PopupIdeaNew(props) {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState({\n    day: 1,\n    month: 1,\n    year: 2023,\n  });\n  const [visibility, setVisibility] = useState();\n  const [section, setSection] = useState();\n\n  function clearPopup() {\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate({\n      day: 1,\n      month: 1,\n      year: 2023\n    });\n    setVisibility(\"\");\n    setSection();\n  }\n\n  function handlePopupIdeaNew() {\n    props.setPopupNew(false);\n    clearPopup();\n  }\n\n  async function createIdeaInDB() {\n    const Idea = Parse.Object.extend(\"Idea\");\n    const newIdea = new Idea();\n\n    newIdea.set(\"user\", Parse.User.current());\n    newIdea.set(\"userimage\", Parse.User.current().get(\"userimage\"));\n    newIdea.set(\"author\", Parse.User.current().get(\"username\"));\n    newIdea.set(\"title\", title);\n    newIdea.set(\"description\", convertToPlain(description));\n    newIdea.set(\"expiration\", convertDateObjectToString(date));\n    newIdea.set(\"section\", section);\n    newIdea.set(\"visibility\", visibility);\n\n    try {\n      let result = await newIdea.save();\n      alert(\"Idea created with ID: \" + result.id);\n      console.log(\"Idea created with ID: \" + result.id);\n      props.setPopupNew(false);\n      clearPopup();\n    } catch (error) {\n      alert(\"Failed to update object, with error code: \" + error.message);\n    }\n  }\n\n  return props.popupNew ? (\n    <div className=\"popup-page\">\n      <div className=\"popup\">\n        <section className=\"idea-container-new\">\n          {/* LEFT-COLUMN */}\n          <div className=\"idea-flex-left\">\n            <div className=\"idea-top-left\">\n              <CreatedByNew />\n              <CloseWindow closeAction={handlePopupIdeaNew} />\n            </div>\n            <TitleEdit title={title} setTitle={setTitle} />\n            <RichTextEditor\n              description={description}\n              setDescription={setDescription}\n            />\n            {/* Dropdowns */}\n            <h5>Expiration Date</h5>\n            <DropdownCalendar\n              date={date}\n              setDate={setDate}\n            />\n            <Section\n              section={section}\n              setSection={setSection}\n            />{\" \"}\n            <DropdownVisibility\n              visibility={visibility}\n              setVisibility={setVisibility}\n            />\n            {/* Attached articles */}\n            <br />\n            <br />\n            {/* Buttons */}\n            <div className=\"align-bottons\">\n              <DiscardButton\n                text=\"Discard\"\n                discardAction={handlePopupIdeaNew}\n              />\n\n              <div className=\"right-buttons\">\n                <SaveButton saveAction={createIdeaInDB} />\n              </div>\n            </div>\n          </div>\n        </section>\n        {props.children}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default PopupIdeaNew;\n","import Parse from \"parse\";\n\nexport async function readJobList(articleId) {\n  let jobArray = [];\n  let query = new Parse.Query(\"ArticleRole\");\n  query.include(\"user\");\n  query.equalTo(\"articleId\", articleId);\n\n  try {\n    let job = await query.find();\n\n    job.forEach((job) => {\n      jobArray.push(job);\n    });\n    return jobArray;\n  } catch (error) {}\n}\n","import React, { useState, useEffect } from 'react';\nimport { IoMdArrowDropdownCircle } from 'react-icons/io'; \nimport Parse from 'parse'; \n\n// Styles\nimport './DropdownLength.css'; \n\n\n\n\nfunction DropdownLength({length, setLength}) {\n\nconst [isActive, setIsActive] = useState(false)\nconst [readResults, setReadResults] = useState([])\nlet lengthOptions = []\n\nuseEffect(() => {\n    readWorkload();\n}, []);\n\nuseEffect(() => {}, [readResults]);\n\nconst readWorkload = async function () {\n    let query = new Parse.Query(\"Length\");\n    let lengthOption = await query.find();\n\n    try {\n        lengthOption.forEach((lengthOption) => {\n        lengthOptions.push(lengthOption.get(\"words\"));\n        });\n\n    setReadResults(lengthOptions);\n    return true; \n}catch (error) {\n    alert(`Error! ${error.message}`);\n    return false;\n}\n}\n\n\n    return (\n        <div className=\"dropdown\">\n        <h5>Length</h5>\n        <div className=\"dropdown-select\">\n            <div className=\"dropdown-btn\" onClick={() => setIsActive(!isActive)}>\n                {!length && (<p>Select</p>)}\n                <div className=\"selected-length\">{length}</div>\n                <div className=\"space\"></div>\n                <IoMdArrowDropdownCircle className=\"dropdown-icon\"/>\n            </div>\n            {isActive && (\n            <div className=\"dropdown-content\">\n            {readResults.map((lengthOption) => (\n                <div\n                    onClick={(e) => {\n                    setLength(lengthOption);\n                    setIsActive(false);\n                    }}\n                    className=\"dropdown-item\"\n                >\n                    <h6>{lengthOption}</h6>\n                </div>\n                ))}\n            </div>\n            )}\n        </div>\n    </div>\n    )\n}\n\nexport default DropdownLength\n","import React from 'react';\nimport { BiBrain } from 'react-icons/bi';\n\n// Styles\nimport './CreatedBy.css'\n\nfunction CreatedByArticle(props) {\n\n    return (\n        <div className=\"logo-and-id\">\n            <BiBrain className=\"idea-icon\"/>\n            <p className=\"createdby-text\"><b>Article</b>  from idea #{props.ideaId} created by {props.ideaAuthor}</p>\n            <div className=\"id-label\">{props.articleId}</div>\n        </div>\n    )\n    \n}\n\nexport default CreatedByArticle","import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\n\n// Styles\nimport \"./AssignEmployee.css\";\n\nfunction AssignEmployee({ selectedEmployee, setSelectedEmployee, setEmployeeId}) {\n  const [readResults, setReadResults] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const employees = [];\n\n   useEffect(() => {\n    readEmployees();\n  }, []);\n\n  \n  const readEmployees = async function () {\n    let query = new Parse.Query(\"User\");\n    try {\n      let employee = await query.find();\n      employee.forEach(employee => {\n        employees.push(employee);\n      })\n      console.log(employees);\n       setReadResults(employees);\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"employee-dropdown-container\">\n      <div className=\"section-employee\">\n      <h5>Employee</h5>\n      <div className=\"employee-dropdown-btn\" onClick={() => setIsActive(!isActive)}>\n        {!selectedEmployee ? (<p>Select</p>) : \n        <p className=\"selected-employee\">{selectedEmployee}</p>}\n        <div className=\"space\"></div>\n        <IoMdArrowDropdownCircle className=\"dropdown-icon\" />\n      </div>\n      {isActive && (\n                    <div className=\"employee-dropdown-content\">\n                        {readResults.map((employee) => ( \n                            <div \n                                onClick={(e) => {\n                                  console.log(\"is the fail happening here?\")\n\n                                    const chosenEmployeeInfo = employee.get(\"username\") + \", \" + employee.get(\"role\")\n                                    setSelectedEmployee(chosenEmployeeInfo);\n                                    setEmployeeId(employee.id);\n                                    setIsActive(false)\n                                }}\n                                className=\"dropdown-item\">\n                                    <h6>{employee.get(\"username\")},  {employee.get(\"role\")}</h6>\n                            </div>\n                        ))}\n                    </div>\n                )}\n    </div>\n    </div>\n  );\n}\n\nexport default AssignEmployee;","import React, { useState} from \"react\";\nimport Parse from \"parse\";\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\n\n// Styles\nimport \"./AssignWorkload.css\";\n\nfunction AssignWorkload({workload, setWorkload}) {\n  const [readResults, setReadResults] = useState([]);\n  const [isActive, setIsActive] = useState(false);\n  const durationArray = [];\n\n  const readWorkLoad = async function () {\n    let query = new Parse.Query(\"Workload\");\n    try {\n      let workload = await query.find();\n      workload.forEach((workload) => {\n        durationArray.push(workload.get(\"duration\"));\n      });\n      console.log(\"Durations parsed from the database\",durationArray);\n      setReadResults(durationArray);\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  };\n\n  return (\n    <div className=\"workload-dropdown-container\">\n      <div className=\"section-workload\" onClick={readWorkLoad} >\n      <h5>Workload</h5>\n      <div className=\"workload-dropdown-btn\" onClick={() => setIsActive(!isActive)}>\n        {!workload ? (<p>Select</p>) : \n        <p className=\"selected-workload\">{workload}</p>}\n        <div className=\"space\"></div>\n          <IoMdArrowDropdownCircle className=\"dropdown-icon\" />\n        </div>\n        {isActive && (\n          <div className=\"workload-dropdown-content\">\n            {readResults.map((workload) => (\n              <div\n                onClick={(e) => {\n                  setWorkload(workload);\n                  setIsActive(false);\n                }}\n                className=\"dropdown-item\"\n              >\n                <h6>{workload}</h6>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AssignWorkload;\n","import React from \"react\";\nimport { GoCheck } from \"react-icons/go\";\n\n// Styles\nimport \"./SaveButtonSmall.css\";\n\nconst SaveButtonSmall = ({ saveAction }) => {\n  console.log(\"button clicked\");\n\n  return (\n      <div className=\"job-button-container\">\n        <button className=\"save-job-btn\" onClick={saveAction}>\n          <GoCheck className=\"check-icon\" />\n        </button>\n      </div>\n  );\n};\n\nexport default SaveButtonSmall;\n","import React, { useState } from \"react\";\nimport Parse from \"parse\";\nimport {readJobList} from '../../../database/articleRole';\n\n// Styles\nimport \"./JobForm.css\";\n\n// Components\nimport AssignEmployee from \"../assign-employee/AssignEmployee\";\nimport AssignWorkload from \"../assign-workload/AssignWorkload\";\nimport SaveButtonSmall from \"../../buttons/SaveButtonSmall/SaveButtonSmall\"\n\nfunction JobForm({\n  workload,\n  setWorkload,\n  selectedEmployee,\n  setSelectedEmployee,\n  articleId,\n  setHasAssignedJobs,\n  setAssignedJob\n}) {\n  const [employeeId, setEmployeeId] = useState();\n  \n\n  function saveJob() {\n    {\n      if (workload && selectedEmployee) {\n        return <SaveButtonSmall saveAction={addJobToDB} />;\n      }\n    }\n  }\n\n  \n  async function updateAvailability() {\n    const query = new Parse.Query(\"User\");\n\n    try {\n      const assignedEmployee = await query.get(employeeId);\n      if ((workload = \"Full day\")) {\n        assignedEmployee.set(\"availability\", \"0%\");\n      } else if ((workload = \"1/2 day\"))\n        assignedEmployee.set(\"availability\", \"50%\");\n      else {\n        assignedEmployee.set(\"availability\", \"75%\");\n      }\n    } catch (e) {}\n  }\n\n  async function addJobToDB() {\n    const ArticleRole = Parse.Object.extend(\"ArticleRole\");\n    const newRole = new ArticleRole();\n    const query = new Parse.Query(\"User\");\n    try {\n      const employeeObject = await query.get(employeeId);\n      newRole.set(\"articleId\", articleId);\n      newRole.set(\"employee\", selectedEmployee);\n      newRole.set(\"workload\", workload);\n      newRole.set(\"user\", employeeObject);\n      newRole.set(\"status\", \"planned\");\n      let result = await newRole.save();\n      setAssignedJob(result);\n      setHasAssignedJobs(true);\n      updateAvailability();\n      alert(\"Job Assigned for artice with ID: \" + articleId);\n    } catch (error) {\n      alert(\"Failed to update assigned Job, with error code: \" + error.message);\n    }\n  }\n\n  return (\n    <>\n      <h3>Job</h3>\n      <div className=\"job-form-component\">\n        <AssignEmployee\n          selectedEmployee={selectedEmployee}\n          setSelectedEmployee={setSelectedEmployee}\n          setEmployeeId={setEmployeeId}\n        />\n        <AssignWorkload workload={workload} setWorkload={setWorkload} />\n        {saveJob()}\n      </div>\n    </>\n  );\n}\n\nexport default JobForm;\n","import React from \"react\";\nimport { GoX } from \"react-icons/go\";\n\n// Styles\nimport \"./DiscardButtonSmall.css\";\n\nconst DiscardButtonSmall = ({ saveAction }) => {\n\n  return (\n      <div className=\"job-button-container\">\n        <button className=\"discard-job-btn\" onClick={saveAction}>\n          <GoX className=\"check-icon-discard\" />\n        </button>\n      </div>\n  );\n};\n\nexport default DiscardButtonSmall;\n","import React from \"react\";\nimport { IoMdArrowDropdownCircle } from \"react-icons/io\";\n\n//Styles\nimport \"./JobList.css\";\nimport DiscardJob from \"../buttons/DiscardButtonSmall/DiscardButtonSmall\";\n\nfunction JobList({jobListResult}) {\n \n  return (\n    <div className=\"job-list\">\n      {jobListResult.map((job) => (\n        <div className=\"assigned-job-container\">\n          <div className=\"employee-info-and-image\">\n            <div className=\"job-image-container\">\n              <img\n                className=\"image-user-job\"\n                src={job.get(\"user\").get(\"userimage\").url()}\n                alt=\"employee image\"\n              />\n            </div>\n            <p>\n              {job.get(\"employee\")}, {job.get(\"workload\")}\n            </p>\n          </div>\n          <div className=\"joblist-container\">\n            <br></br>\n            <div className=\"status-text\">Status</div>\n            <div className=\"status-dropdown-btn\">\n            <p className=\"status-text\">Planned</p>\n              <IoMdArrowDropdownCircle className=\"dropdown-icon\" />\n            </div>\n            \n            < DiscardJob />\n            </div>\n          </div>\n      ))}\n    </div>\n  )\n}\n\nexport default JobList;\n","import React, {useState} from 'react';\nimport Parse from 'parse';\n\n// Styles\nimport './CommentForm.css';\n\n// components\nimport SaveButtonSmall from '../buttons/SaveButtonSmall/SaveButtonSmall';\n\nfunction CommentForm (props) {\n\n    const user = Parse.User.current(); \n    const author = (Parse.User.current()).get(\"username\");\n    const image = user.get(\"userimage\");\n    const [activeComment, setActiveComment] = useState(false);\n    const [commentInput, setCommentInput] = useState();\n\n    function newComment(e) {\n        setCommentInput(e.target.value);\n    }\n\n   const updateCommentList = async function () {\n        const query = new Parse.Query(\"IdeaComment\");\n    \n        try {\n          query.equalTo(\"ideaId\", props.ideaId);\n          query.descending(\"createdAt\");\n          const comments = await query.find();\n          props.setCommentResult(comments);\n    \n          return true;\n        } catch (error) {\n          alert(`Error! Is this the error?`);\n          return false;\n        }\n      };\n\n\n    async function addCommentToDB() {\n        const IdeaComment = Parse.Object.extend('IdeaComment');\n        const newComment = new IdeaComment();\n        newComment.set('ideaId', props.ideaId);\n        newComment.set(\"user\", user.id);\n        newComment.set(\"author\", author);\n        newComment.set(\"userImage\", image);\n        newComment.set(\"commentText\", commentInput);\n        console.log(\"add comment to database has started\");\n\n        try{\n            let result = await newComment.save();\n            updateCommentList();\n            alert('Comment created with ID: ' + result.id);\n            console.log('Comment updated with objectId: ' + result.id);\n\n        } catch(error) {\n            alert('Failed to update comment, with error code: ' + error.message);\n        }\n    }\n\n\n    return (\n        <div className=\"commentform-space\">\n        <h3>Comments</h3>\n        <div className =\"comment-form-container\">\n                <div className=\"comment-form\" onClick={() => setActiveComment(!activeComment)}> \n                    <div className=\"form-image-container\"> \n                        <img className=\"comment-form-image\" src={user.get(\"userimage\").url()}/>\n                    </div>\n                    <input \n                    className = \"comment-content\"\n                    placeholder = \"Write your comment here..\"\n                    type=\"text\"\n                    value={commentInput}\n                    onChange={newComment}\n                    />\n                </div>\n                <SaveButtonSmall saveAction={addCommentToDB}/>\n        </div>\n        </div>\n    );\n}\n\nexport default CommentForm;","import React from \"react\";\nimport { List } from \"antd\";\n\n// Styles\nimport \"./CommentList.css\";\nimport DiscardButtonSmall from \"../buttons/DiscardButtonSmall/DiscardButtonSmall\";\n\nfunction CommentList(props) {\n\n  return (\n    <div>\n      {props.commentResult !== null &&\n        props.commentResult !== undefined &&\n        props.commentResult.length > 0 && (\n          <List\n            dataSource={props.commentResult}\n            renderItem={(item) => (\n              <List.Item className=\"comment_list\">\n                <div className=\"comment-container\">\n                  <div className=\"comment\">\n                    <div className=\"comment-image-container\">\n                      <img\n                        className=\"image-user-comment\"\n                        src={item.get(\"userImage\").url()}\n                        alt=\"comment author\"\n                      />\n                    </div>\n                    <div className=\"comment-text-container\">\n                      <p className=\"comment-author\"> {item.get(\"author\")}</p>\n                      <p className=\"comment-date\">\n                        {\" \"}\n                        {item.get(\"createdAt\").toString().substring(4, 21)}\n                      </p>\n                      <h5>\n                        {item.get(\"commentText\")}\n                      </h5>\n                    </div>\n                  </div>\n                  <DiscardButtonSmall/>\n                </div>\n              </List.Item>\n            )}\n          />\n        )}\n    </div>\n  );\n}\n\nexport default CommentList;\n\n","import React from \"react\";\nimport { IoArrowForward } from \"react-icons/io5\";\n\n// Styles\nimport \"./ProceedButton.css\";\n\nconst ProceedButton = ({ text, proceedAction }) => {\n  return (\n    <button className=\"proceed-btn\" onClick={proceedAction}>\n      <div class=\"button-text\">\n        {text}\n        <div className=\"circle\">\n          <IoArrowForward className=\"proceed-icon\" />\n        </div>\n      </div>\n    </button>\n  );\n};\n\nexport default ProceedButton;\n","import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./PopupArticle.css\";\n\n// Functions\nimport { readJobList } from \"../../../database/articleRole\";\nimport { deleteArticle } from \"../../../database/REST\";\nimport { convertDateObjectToString } from \"../popupConversions\";\nimport { convertDateStringToObject } from \"../popupConversions\";\nimport { convertToPlain } from \"../popupConversions\";\n\n//components\nimport TitleEdit from \"../../title-edit/TitleEdit\";\nimport RichTextEditor from \"../../rich-text-editor/RichTextEdior\";\nimport DropdownCalendar from \"../../dropdowns/dropdown-calendar/DropdownCalendar\";\nimport DropdownLength from \"../../dropdowns/dropdown-length/DropdownLength\";\nimport CreatedByArticle from \"./../../created-by/CreatedByArticle\";\nimport Section from \"../../dropdowns/section/Section\";\nimport JobForm from \"../../dropdowns/job-dropdown-form/JobForm\";\nimport JobList from \"../../job-list/JobList\";\nimport CommentForm from \"../../comment-form/CommentForm\";\nimport CommentList from \"../../comment-list/CommentList\";\n\n//buttons\nimport ProceedButton from \"../../buttons/ProceedButton/ProceedButton\";\nimport SaveButton from \"../../buttons/SaveButton/SaveButton\";\nimport DiscardButton from \"../../buttons/DiscardButton/DiscardButton\";\nimport CloseWindow from \"../../buttons/CloseWindow/CloseWindow\";\n\nfunction PopupArticle(props) {\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState();\n  const [section, setSection] = useState();\n  const [length, setLength] = useState();\n  const [workload, setWorkload] = useState();\n  const [selectedEmployee, setSelectedEmployee] = useState();\n  const [ideaId, setIdeaId] = useState();\n  const [ideaAuthor, setIdeaAuthor] = useState();\n  const [hasAssignedJobs, setHasAssignedJobs] = useState(false);\n  const [assignedJob, setAssignedJob] = useState();\n  const [jobListResult, setJobListResult] = useState();\n  const [commentResult, setCommentResult] = useState();\n\n  useEffect(() => {\n    props.ideaCardObject && setArticleStateInfoFromIdea();\n  }, [props.articleId]);\n\n  useEffect(() => {\n    props.articleCardObject && setArticleState();\n  }, [props.articleCardObject]);\n\n  useEffect(() => {\n    readJobList(props.articleId).then((jobList) => {\n      setJobListResult(jobList);\n    });\n  }, [assignedJob]);\n\n  async function setArticleStateInfoFromIdea() {\n    console.log(\"setArticleInfoFromIdea started..\", props.ideaCardObject);\n\n    const initialDeadline = props.date.toString().substring(4, 15);\n    const initialLength = \"0-100 words\";\n\n    setTitle(props.ideaCardObject.title);\n    setDescription(props.ideaCardObject.description);\n    setSection(props.ideaCardObject.section);\n    setIdeaId(props.ideaCardObject.id);\n    setIdeaAuthor(props.ideaCardObject.author);\n    setDate(convertDateStringToObject(initialDeadline));\n    setLength(initialLength);\n  }\n\n  async function setArticleState() {\n    setIdeaAuthor(props.articleCardObject.author);\n    setTitle(props.articleCardObject.title);\n    setDescription(props.articleCardObject.description);\n    setDate(convertDateStringToObject(props.articleCardObject.deadline));\n    setSection(props.articleCardObject.section);\n    setLength(props.articleCardObject.length);\n    setIdeaId(props.articleCardObject.ideaId);\n    setIdeaAuthor(props.articleCardObject.ideaAuthor);\n  }\n\n  function clearPopup() {\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate();\n    setSection();\n    setLength();\n  }\n\n  async function updateArticleInDB() {\n    console.log(\"updateArticleInDB with article id: \", props.articleId);\n    const objectId = props.articleId;\n    const Article = new Parse.Object(\"Article\");\n\n    Article.set(\"objectId\", objectId);\n    Article.set(\"title\", title);\n    Article.set(\"description\", convertToPlain(description));\n    Article.set(\"deadline\", convertDateObjectToString(date));\n    Article.set(\"section\", section);\n    Article.set(\"length\", length);\n\n    try {\n      let result = await Article.save();\n      console.log(\"Article updated with objectId: \" + result.id);\n      props.setPopupArticle(false);\n      clearPopup();\n    } catch (error) {\n      alert(\n        \"Failed to update article object from PopupArticle, with error code: \" +\n          error.message\n      );\n    }\n  }\n\n  async function handleDiscardAttempt() {\n    try {\n      await deleteArticle(props.articleId);\n      alert(\"Success! Article deleted with id: \" + props.articleId);\n      console.log(\"Success! Article deleted with id: \" + props.articleId);\n      props.setPopupArticle(false);\n      clearPopup();\n    } catch (error) {\n      alert(`Error ${error.message}`);\n    }\n  }\n\n  function approveArticle() {\n    return true;\n  }\n\n  function handlePopupArticle() {\n    props.setPopupArticle(false);\n    clearPopup();\n  }\n\n  /*  const updateJobList = async function () {\n    let query = new Parse.Query(\"ArticleRole\");\n    query.include(\"user\");\n    query.equalTo(\"articleId\", props.articleId);\n\n    let job = await query.find();\n    try {\n      job.forEach((job) => {\n        jobArray.push(job);\n      });\n      setJobListResult(jobArray);\n      return true;\n    } catch (error) {\n      alert(`Error! ${error.message}`);\n      return false;\n    }\n  }; */\n\n  return props.popupArticle ? (\n    <div className=\"popup-page\">\n      <div className=\"popup\">\n        <section className=\"idea-container\">\n          {/* LEFT-COLUMN */}\n          <div className=\"idea-flex-left\">\n            <CreatedByArticle\n              articleId={props.articleId}\n              ideaId={ideaId}\n              ideaAuthor={ideaAuthor}\n            />\n            <TitleEdit title={title} setTitle={setTitle} />\n            <RichTextEditor\n              description={description}\n              setDescription={setDescription}\n            />\n\n            {/* Dropdowns */}\n            <h5>Deadline</h5>\n            <DropdownCalendar date={date} setDate={setDate} />\n            <Section section={section} setSection={setSection} />\n            <DropdownLength length={length} setLength={setLength} />\n            <br />\n            <br />\n            <br />\n\n            {/* Buttons */}\n            <div className=\"align-bottons\">\n              <DiscardButton\n                text=\"Discard\"\n                discardAction={handleDiscardAttempt}\n              />\n\n              <div className=\"right-buttons\">\n                <div className=\"convert-button\">\n                  <ProceedButton\n                    text=\"Approve Article\"\n                    proceedAction={approveArticle}\n                  />\n                </div>\n                <SaveButton saveAction={updateArticleInDB} />\n              </div>\n            </div>\n          </div>\n\n          {/* RIGHT-COLUMN */}\n          <div className=\"idea-flex-right\">\n            <div className=\"top-right\">\n              <CloseWindow closeAction={handlePopupArticle} />\n            </div>\n            <div className=\"job-dropdown-container\">\n              <JobForm\n                selectedEmployee={selectedEmployee}\n                setSelectedEmployee={setSelectedEmployee}\n                workload={workload}\n                setWorkload={setWorkload}\n                articleId={props.articleId}\n                setAssignedJob={setAssignedJob}\n                setHasAssignedJobs={setHasAssignedJobs}\n              />\n              {hasAssignedJobs && <JobList jobListResult={jobListResult} />}\n            </div>\n            <CommentForm\n              ideaId={props.ideaId}\n              setCommentResult={setCommentResult}\n            />\n            <CommentList commentResult={commentResult} />\n          </div>\n        </section>\n        {props.children}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default PopupArticle;\n","import React from 'react';\nimport { BiBrain } from 'react-icons/bi';\n\n// Styles\nimport './CreatedBy.css'\n\nfunction CreatedBy(props) {\n\n    return (\n        <div className=\"logo-and-id\">\n            <BiBrain className=\"idea-icon\"/>\n            <p className=\"createdby-text\"><b>Idea</b> created by {props.author}</p>\n            <div className=\"id-label\">{props.ideaId}</div>\n        </div>\n    )\n    \n}\n\nexport default CreatedBy","import React, { useEffect, useState } from \"react\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./../Popup.css\";\n\n// Functions\nimport { deleteIdea } from \"../../../database/REST\";\nimport { convertDateObjectToString } from \"../popupConversions\";\nimport { convertDateStringToObject } from \"../popupConversions\";\nimport { convertToPlain } from \"../popupConversions\";\nimport { updateIdea } from \"../../../database/REST\";\n\n//components\nimport TitleEdit from \"../../title-edit/TitleEdit\";\nimport SaveButton from \"../../buttons/SaveButton/SaveButton\";\nimport ProceedButton from \"../../buttons/ProceedButton/ProceedButton\";\nimport DiscardButton from \"../../buttons/DiscardButton/DiscardButton\";\nimport CloseWindow from \"../../buttons/CloseWindow/CloseWindow\";\nimport DropdownVisibility from \"../../dropdowns/dropdown-visibility/DropdownVisibility\";\nimport DropdownCalendar from \"../../dropdowns/dropdown-calendar/DropdownCalendar\";\nimport Section from \"../../dropdowns/section/Section\";\nimport RichTextEditor from \"../../rich-text-editor/RichTextEdior\";\nimport CreatedBy from \"../../created-by/CreatedBy\";\nimport CommentForm from \"../../comment-form/CommentForm\";\nimport CommentList from \"../../comment-list/CommentList\";\nimport { BiAlarmExclamation } from \"react-icons/bi\";\n\nfunction PopupIdea(props) {\n  const [author, setAuthor] = useState();\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState();\n  const [visibility, setVisibility] = useState();\n  const [section, setSection] = useState();\n  const [commentResult, setCommentResult] = useState();\n\n  useEffect(() => {\n    props.ideaCardObject && setIdeaInfo();\n  }, [props]);\n\n  async function setIdeaInfo() {\n    setTitle(props.ideaCardObject.title);\n    setDescription(props.ideaCardObject.description);\n    setSection(props.ideaCardObject.section);\n    setVisibility(props.ideaCardObject.visibility);\n    setDate(convertDateStringToObject(props.ideaCardObject.expiration));\n    setAuthor(props.ideaCardObject.author);\n  }\n\n  function clearPopup() {\n    setTitle(\"\");\n    setDescription(\"\");\n    setDate();\n    setVisibility(\"\");\n    setSection();\n  }\n\n  async function handleDiscardAttempt() {\n    try {\n      await deleteIdea(props.ideaId);\n      alert(\"Success! Idea deleted with id: \" + props.ideaId);\n      console.log(\"Success! Idea deleted with id: \" + props.ideaId);\n      props.setPopup(false);\n      clearPopup();\n    } catch (error) {\n      alert(`Error ${error.message}`);\n    }\n  }\n\n  function handlePopupIdea() {\n    props.setPopup(false);\n  }\n\n  async function updateIdeaInDB() {\n    const updateData = {\n      title: title,\n      description: convertToPlain(description),\n      expiration: convertDateObjectToString(date),\n      section: section,\n      visibility: visibility,\n    };\n    try {\n      let id = await props.ideaId;\n      await updateIdea(id, updateData);\n      alert(\"Idea updated with objectId: \" + id);\n      props.setPopup(false);\n      clearPopup();\n    } catch (error) {\n      alert(\"Failed to update object, with error code: \" + error.message);\n    }\n  }\n\n  async function convertToArticle() {\n    props.setPopup(false);\n    props.setPopupArticle(true);\n\n    const Article = Parse.Object.extend(\"Article\");\n    const newArticle = new Article();\n\n    try {\n      await newArticle.save();\n    } catch (error) {\n      alert(error);\n    }\n\n    try {\n      await newArticle.save()\n    }\n    catch(error) {\n       alert(error)\n   }\n\n   const initialDeadline = props.date.toString().substring(4,15)\n   const initialLength = \"0-100 words\"\n\n    await newArticle.fetch().then((latestArticle) => {\n    console.log(\"latest article id \", latestArticle.id)\n    newArticle.set(\"title\", title).save()\n    newArticle.set(\"description\", convertToPlain(description)).save()\n    newArticle.set(\"section\", section).save()\n    newArticle.set(\"ideaId\", props.ideaId).save()\n    newArticle.set(\"deadline\", initialDeadline).save()\n    newArticle.set(\"length\", initialLength).save()\n    newArticle.set(\"ideaAuthor\", author).save()\n    newArticle.set(\"status\", \"planned\").save()\n    props.setArticleId(latestArticle.id)\n\n    }, error => {\n    alert(error)\n    })\n  }\n\n  return props.popup ? (\n    <div className=\"popup-page\">\n      <div className=\"popup\">\n        <section className=\"idea-container\">\n          {/* LEFT-COLUMN */}\n          <div className=\"idea-flex-left\">\n            <CreatedBy ideaId={props.ideaId} author={author} />\n            <TitleEdit title={title} setTitle={setTitle} />\n            <RichTextEditor\n              description={description}\n              setDescription={setDescription}\n            />\n\n            {/* Dropdowns */}\n            <h5>Expiration Date</h5>\n            <DropdownCalendar date={date} setDate={setDate} />\n            <Section section={section} setSection={setSection} />\n            <DropdownVisibility\n              visibility={visibility}\n              setVisibility={setVisibility}\n            />\n\n            {/* Attached articles */}\n            <h5>Attached articles</h5>\n            <p>No articles attached yet</p>\n            <br />\n            <br />\n            <br />\n\n            {/* Buttons */}\n            <div className=\"align-bottons\">\n              <DiscardButton\n                text=\"Discard\"\n                discardAction={handleDiscardAttempt}\n              />\n              <div className=\"right-buttons\">\n                <div className=\"convert-button\">\n                  <ProceedButton\n                    text=\"Convert to Article\"\n                    proceedAction={convertToArticle}\n                  />\n                </div>\n                <SaveButton saveAction={updateIdeaInDB} />\n              </div>\n            </div>\n          </div>\n\n          {/* RIGHT-COLUMN */}\n          <div className=\"idea-flex-right\">\n            <div className=\"top-right\">\n              <CloseWindow closeAction={handlePopupIdea} />\n            </div>\n            <CommentForm\n              ideaId={props.ideaId}\n              setCommentResult={setCommentResult}\n            />\n            <CommentList commentResult={commentResult} />\n          </div>\n        </section>\n        {props.children}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default PopupIdea;\n","import React from \"react\";\n\n// Styles\nimport \"./Label.css\";\n\nconst Labels = ({ sectionName }) => {\n  function Color(color) {\n    return <div className=\"colors\" style={{ backgroundColor: color }}>{sectionName}</div>;\n  }\n\n  switch (sectionName) {\n    case \"National\":\n      return <div>{Color(\"var(--nation-color)\")}</div>;\n    case \"World\":\n     return <div>{Color(\"var(--world-color)\")}</div>;\n    case \"Politics\":\n      return <div>{Color(\"var(--politics-color)\")}</div>;\n    case \"Business\":\n      return <div>{Color(\"var(--business-color)\")}</div>;\n    case \"Regional\":\n      return <div>{Color(\"var(--regional-color)\")}</div>;\n    case \"Culture\":\n      return <div>{Color(\"var(--culture-color)\")}</div>;\n    case \"Food\":\n      return <div>{Color(\"var(--food-color)\")}</div>;\n    case \"Family\":\n      return <div>{Color(\"var(--family-color)\")}</div>;\n    case \"Health\":\n      return <div>{Color(\"var(--health-color)\")}</div>;\n    case \"Weather\":\n      return <div>{Color(\"var(--weather-color)\")}</div>;\n    case \"Sports\":\n      return <div>{Color(\"var(--sports-color)\")}</div>;\n    case \"Science\":\n      return <div>{Color(\"var(--science-color)\")}</div>;\n    case \"Music\":\n      return <div>{Color(\"var(--science-color)\")}</div>;\n    case \"Tech\":\n     return <div>{Color(\"var(--tech-color)\")}</div>;\n    default:\n      return null;\n  }\n\n};\n\nexport default Labels;\n","import React, {  useEffect } from \"react\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./IdeaColumn.css\";\n\n// Components\nimport Label from '../label/Label';\n\nfunction IdeaColumn(props) {\n\n  function handleClickIdeaPopup(card) {\n    console.log(\"idea card clicked!\")\n    props.setPopup(true)\n    props.setIdeaId(card.id)\n    props.setIdeaCardObject(card)\n}\n\n  useEffect(() => {\n    getIdeaCard();\n  }, []);\n\n/*   useEffect(() => {\n    console.log(\"from useEffect: \", cardIdeaTable);\n  }, [cardIdeaTable]); */\n\n  async function getIdeaCard() {\n    const Ideas = Parse.Object.extend(\"Idea\");\n    const query = new Parse.Query(Ideas);\n    query.include(\"user\");\n    query.include(\"section\");\n    query.descending(\"createdAt\");\n\n    try {\n      const ideas = await query.find();\n      console.log(\"Parse Objects ideas: \", ideas);\n      const destructuredIdeas = destructureIdeas(ideas);\n      props.setCardIdeaTable(destructuredIdeas);\n      console.log(\"from getIdeaCard: \", props.cardIdeaTable);\n      return true;\n    } catch (error) {\n      alert(`getIdeaCard Error Message ${error.message}`);\n      return false;\n    }\n  }\n\n  function destructure(idea) {\n    return {\n      id: idea.id,\n      userImage: idea.get(\"user\").get(\"userimage\").url(),\n      title: idea.get(\"title\"),\n      description: idea.get(\"description\"),\n      section: idea.get(\"section\"),\n      author: idea.get(\"author\"),\n      expiration: idea.get(\"expiration\"),\n      visibility: idea.get(\"visibility\")\n     \n    }\n    }\n\n\n    function destructureIdeas(ideas) {\n    return ideas.map(destructure);\n    }\n    \n  return (\n    <>\n    <h2 className=\"idea-column-title\" >IDEAS</h2>\n    <section className=\"idea-card-container\">\n      {props.cardIdeaTable.map((card) => (\n        <div className=\"card-idea\" onClick={() => handleClickIdeaPopup(card)}>\n          <h3>{card.title}</h3>\n          <div className=\"card-id\">\n            <small>\n              <small>Expiration Date</small>\n            </small>\n            <small>{card.expiration}</small>\n          </div>\n          <p>{card.description}</p>\n          <div className=\"tags\">\n            <Label sectionName={card.section}/>\n          </div>\n          <div className=\"assigned-people\">\n            <img src={card.userImage} />\n          </div>\n        </div>\n      ))}\n    </section>\n    </>\n  );\n}\n\nexport default IdeaColumn;\n","export default __webpack_public_path__ + \"static/media/Loui_Avatar.9fe7312d.png\";","import React from \"react\";\n\n// Styles\nimport \"./Statusbar.css\";\n\nconst Statusbar = ({ status }) => {\n  function ColorWidth(color, width) {\n    return (\n      <div\n        className=\"cw\"\n        style={{ backgroundColor: color, width: width }}\n      ></div>\n    );\n  }\n\n  switch (status) {\n    case \"noassigned\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-neutral)\", \"0px\")}\n        </div>\n      );\n    case \"planned\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-neutral)\", \"50px\")}\n        </div>\n      );\n    case \"approved\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-approved)\", \"190px\")}\n        </div>\n      );\n    case \"accepted\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-neutral)\", \"100px\")}\n        </div>\n      );\n    case \"onhold\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-onhold)\", \"100px\")}\n        </div>\n      );\n    case \"finished\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-neutral)\", \"150px\")}\n        </div>\n      );\n    case \"warning\":\n      return (\n        <div className=\"bar\">\n          {ColorWidth(\"var(--statusbar-warning)\", \"190px\")}\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nexport default Statusbar;\n","import React, { useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Loui_Avatar from \"./Loui_Avatar.png\";\n\n// Styles\nimport \"./ArticleColumn.css\";\n\n// Components\nimport Statusbar from \"../statusbar/Statusbar\";\nimport Label from \"../label/Label\";\n\nfunction ArticleColumn(props) {\n  function handleClickIdeaPopup(card) {\n    console.log(\"article card clicked!\");\n    props.setPopupArticle(true);\n    props.setArticleId(card.id);\n    props.setArticleCardObject(card);\n  }\n\n  useEffect(() => {\n    getArticleCard();\n  }, []);\n\n  async function getArticleCard() {\n    const articleObjects = Parse.Object.extend(\"Article\");\n    const query = new Parse.Query(articleObjects);\n    query.include(\"workload\");\n    query.equalTo(\"deadline\", props.date.toString().substring(4, 15));\n    query.notEqualTo(\"status\", \"onhold\");\n\n    try {\n      const articles = await query.find();\n      console.log(\"Parse Objects: \", articles);\n      const destructuredIdeas = destructureIdeas(articles);\n      props.setColumn(destructuredIdeas);\n      console.log(\"from readIdeas: \", props.column);\n      return true;\n    } catch (error) {\n      alert(`getIdeaCard Error Message ${error.message}`);\n      return false;\n    }\n  }\n\n  function destructure(article) {\n    return {\n      id: article.id,\n      title: article.get(\"title\"),\n      description: article.get(\"description\"),\n      section: article.get(\"section\"),\n      deadline: article.get(\"deadline\"),\n      length: article.get(\"length\"),\n      status: article.get(\"status\"),\n      ideaId: article.get(\"ideaId\"),\n      ideaAuthor: article.get(\"ideaAuthor\"),\n    };\n  }\n\n  function destructureIdeas(article) {\n    return article.map(destructure);\n  }\n\n  return (\n    <div>\n      <h2 className=\"article-column-title\">{props.columnTitle}</h2>\n      <section className=\"article-card-container\">\n        {props.column.map((card) => (\n          <div className=\"card\" onClick={() => handleClickIdeaPopup(card)}>\n            <h3>{card.title}</h3>\n            <div className=\"card-id\">\n              <small>\n                <small>Deadline</small>\n              </small>\n              <small>{card.deadline}</small>\n            </div>\n            <p>{card.description}</p>\n            <div className=\"tags\">\n              <Label sectionName={card.section} />\n            </div>\n            <div className=\"assigned-people\">\n              <img src={Loui_Avatar} alt=\"test\" />\n            </div>\n            <div className=\"statusbar\">\n            <Statusbar status={card.status} />\n            </div>\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default ArticleColumn;\n","import React, { useEffect } from \"react\";\nimport Parse from \"parse\";\nimport Loui_Avatar from \"./Loui_Avatar.png\";\n\n// Styles\nimport \"./ArticleColumn.css\";\n\n// Components\nimport Statusbar from \"../statusbar/Statusbar\";\nimport Label from \"../label/Label\";\n\nfunction ColumnOnHold(props) {\n  function handleClickIdeaPopup(card) {\n    console.log(\"article card clicked!\");\n    props.setPopupArticle(true);\n    console.log(\"is this the id of the card?\", card.id);\n    props.setArticleId(card.id);\n    props.setArticleCardObject(card);\n    console.log(\"this is the card: \", card);\n  }\n\n  useEffect(() => {\n    getArticleCard();\n  }, []);\n\n  async function getArticleCard() {\n    const articleObjects = Parse.Object.extend(\"Article\");\n    const query = new Parse.Query(articleObjects);\n    query.include(\"workload\");\n    query.equalTo(\"status\", \"onhold\");\n\n    try {\n      const articles = await query.find();\n      console.log(\"Parse Objects: \", articles);\n      const destructuredIdeas = destructureIdeas(articles);\n      props.setColumnOnHold(destructuredIdeas);\n      console.log(\"from readIdeas: \", props.columnOnHold);\n      return true;\n    } catch (error) {\n      alert(`getIdeaCard Error Message ${error.message}`);\n      return false;\n    }\n  }\n\n  function destructure(article) {\n    return {\n      id: article.id,\n      title: article.get(\"title\"),\n      description: article.get(\"description\"),\n      section: article.get(\"section\"),\n      deadline: article.get(\"deadline\"),\n      status: article.get(\"status\"),\n    };\n  }\n\n  function destructureIdeas(article) {\n    return article.map(destructure);\n  }\n\n  return (\n    <div>\n      <h2 className=\"article-column-title\">ON HOLD</h2>\n      <section className=\"article-card-container\">\n        {props.columnOnHold.map((card) => (\n          <div className=\"card\" onClick={() => handleClickIdeaPopup(card)}>\n            <h3>{card.title}</h3>\n            <div className=\"card-id\">\n              <small>Deadline</small>\n              <small>{card.deadline}</small>\n            </div>\n            <p>{card.description}</p>\n            <div className=\"tags\">\n              {/* <InputTag/> */}\n              <Label sectionName={card.section} />\n            </div>\n            <div className=\"assigned-people\">\n              <img src={Loui_Avatar} alt=\"test\" />\n            </div>\n            <div className=\"statusbar\">\n            <Statusbar status={card.status} />\n            </div>\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default ColumnOnHold;\n","import React, { useState } from \"react\";\n\n// Styles\nimport \"./Dashboard.css\";\n\n// Components\nimport Footer from \"../components/footer/Footer\";\nimport AddIdeaButton from \"../components/buttons/AddIdeaButton/AddIdeaButton\";\nimport PopupIdeaNew from \"../components/popups/popup-idea-new/PopupIdeaNew\";\nimport PopupArticle from \"../components/popups/popup-article/PopupArticle\";\nimport PopupIdea from \"../components/popups/popup-idea/PopupIdea\";\nimport IdeaColumn from \"../components/columns/IdeaColumn\";\nimport ArticleColumn from \"../components/columns/ArticleColumn\";\nimport ColumnOnHold from \"../components/columns/ColumnOnHold\";\n\nconst Dashboard = () => {\n  const [popupNew, setPopupNew] = useState(false);\n  const [popup, setPopup] = useState(false);\n  const [popupArticle, setPopupArticle] = useState(false);\n  const [ideaId, setIdeaId] = useState();\n  const [articleId, setArticleId] = useState();\n  const [cardIdeaTable, setCardIdeaTable] = useState([]);\n  const [columnToday, setColumnToday] = useState([]);\n  const [columnTomorrow, setColumnTomorrow] = useState([]);\n  const [columnDATomorrow, setColumnDATomorrow] = useState([]);\n  const [columnOnHold, setColumnOnHold] = useState([]);\n  const [ideaCardObject, setIdeaCardObject] = useState();\n  const [articleCardObject, setArticleCardObject] = useState();\n\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const dayAfterTomorrow = new Date(today);\n  dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2);\n\n  return (\n    <>\n      <div className=\"dashboard\">\n        <h1>Dashboard Page</h1>\n        {/* <Column data={data}/> */}\n\n        <div className=\"card-components\">\n          <IdeaColumn\n            setPopup={setPopup}\n            setIdeaId={setIdeaId}\n            cardIdeaTable={cardIdeaTable}\n            setCardIdeaTable={setCardIdeaTable}\n            setIdeaCardObject={setIdeaCardObject}\n          />\n          <ArticleColumn\n            columnTitle=\"TODAY\"\n            date={today}\n            setArticleId={setArticleId}\n            setPopupArticle={setPopupArticle}\n            column={columnToday}\n            setColumn={setColumnToday}\n            setArticleCardObject={setArticleCardObject}\n          />\n          <ArticleColumn\n            columnTitle=\"TOMORROW\"\n            date={tomorrow}\n            setArticleId={setArticleId}\n            setPopupArticle={setPopupArticle}\n            column={columnDATomorrow}\n            setColumn={setColumnDATomorrow}\n            setArticleCardObject={setArticleCardObject}\n          />\n          <ArticleColumn\n            columnTitle=\"DAY AFTER TOMORROW\"\n            date={dayAfterTomorrow}\n            setArticleId={setArticleId}\n            setPopupArticle={setPopupArticle}\n            column={columnTomorrow}\n            setColumn={setColumnTomorrow}\n            setArticleCardObject={setArticleCardObject}\n          />\n          <ColumnOnHold\n            ideaId=\"dCpw1gH0lk\"\n            setPopupArticle={setPopupArticle}\n            setArticleId={setArticleId}\n            columnOnHold={columnOnHold}\n            setColumnOnHold={setColumnOnHold}\n            setArticleCardObject={setArticleCardObject}\n          />\n        </div>\n        <PopupIdea\n          popup={popup}\n          setPopup={setPopup}\n          ideaId={ideaId}\n          ideaCardObject={ideaCardObject}\n          setPopupArticle={setPopupArticle}\n          setArticleId={setArticleId}\n          articleId={articleId}\n          date={today}\n        />\n        <PopupIdeaNew popupNew={popupNew} setPopupNew={setPopupNew} />\n        <PopupArticle\n          popupArticle={popupArticle}\n          setPopupArticle={setPopupArticle}\n          ideaId={ideaId}\n          articleId={articleId}\n          ideaCardObject={ideaCardObject}\n          articleCardObject={articleCardObject}\n          date={today}\n        />\n      </div>\n      <div className=\"footer-container\">\n        <div className=\"footeridea-btns\">\n          <AddIdeaButton\n            text=\"Add Idea\"\n            popupNew={popupNew}\n            setPopupNew={setPopupNew}\n          />\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import Parse from \"parse\";\n\nexport async function cloudSumIdea() {\n    let result = await Parse.Cloud.run(\"sumIdea\", {\n    })\n    return result\n  }\n\n  export async function cloudSumArticle() {\n    let result = await Parse.Cloud.run(\"sumArticle\", {\n    })\n    return result\n  }","import React, { useEffect, useState } from \"react\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./Lists.css\";\n\n// Components\nimport Footer from \"../components/footer/Footer\";\nimport AddIdeaButton from \"../components/buttons/AddIdeaButton/AddIdeaButton\";\nimport LoadButton from \"../components/buttons/LoadButton/LoadButton\";\nimport PopupIdeaNew from \"../components/popups/popup-idea-new/PopupIdeaNew\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Label from \"../components/label/Label\";\n\n// import function\nimport {cloudSumIdea} from \"../database/cloud\"\n\nconst columns = [\n  {\n    field: \"title\",\n    headerName: \"TITLE\",\n    width: 650,\n    editable: false,\n  },\n  {\n    field: \"section\",\n    headerName: \"SECTION\",\n    width: 200,\n    editable: false,\n    renderCell: (params) => <Label sectionName={params.value} />,\n  },\n  {\n    field: \"author\",\n    headerName: \"AUTHOR\",\n    width: 250,\n    editable: false,\n    renderCell: (params) => (\n      <div className=\"author-column\">\n        <img className=\"img-list\" src={params.value.get(\"userimage\").url()} />\n        {params.value.get(\"username\")}{\" \"}\n      </div>\n    ),\n  },\n  {\n    field: \"expiration\",\n    headerName: \"EXPIRATION\",\n    sortable: true,\n    width: 140,\n  },\n];\n\nfunction Ideas() {\n  const [popupNew, setPopupNew] = useState(false);\n  const [ideaTable, setIdeaTable] = useState();\n  const [cloudResult, setCloudResult] = useState()\n\n  useEffect(() => {\n    fetchIdeas();\n  }, []);\n\n  useEffect(() => {\n    cloudSumIdea().then((sum) => {\n      setCloudResult(sum)\n    })\n  }, []);\n\n  async function fetchIdeas() {\n    const query = new Parse.Query(\"Idea\");\n    query.include(\"user\");\n    try {\n      const ideas = await query.find();\n      console.log(\"Parse Objects: \", ideas);\n      const destructuredIdeas = destructureIdeas(ideas);\n      setIdeaTable(destructuredIdeas);\n      console.log(\"from readIdeas: \", ideaTable);\n      return true;\n    } catch (error) {\n      alert(`Error is this errortest ${error.message}`);\n      return false;\n    }\n  }\n\n  function destructure(idea) {\n    return {\n      id: idea.id,\n      title: idea.get(\"title\"),\n      section: idea.get(\"section\"),\n      author: idea.get(\"user\"),\n      expiration: idea.get(\"expiration\"),\n    };\n  }\n\n  function destructureIdeas(ideas) {\n    return ideas.map(destructure);\n  }\n\n  return (\n    <>\n      <div className=\"list\">\n        <h1>Idea list</h1>\n        <div className=\"list-table\" />\n        <DataGrid\n          rows={ideaTable}\n          columns={columns}\n          pageSize={100}\n          rowsPerPageOptions={[100]}\n        />\n      </div>\n      <PopupIdeaNew popupNew={popupNew} setPopupNew={setPopupNew} />\n      <div className=\"footer-container\">\n        <div className=\"footer-btns\">\n          <AddIdeaButton\n            text=\"Add Idea\"\n            popupNew={popupNew}\n            setPopupNew={setPopupNew}\n          />\n          <LoadButton text=\"Load more Ideas\" />\n          <p>Total Ideas: {cloudResult}</p>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default Ideas;\n","import React, { useState, useEffect } from \"react\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./Lists.css\";\n\n// Components\nimport Statusbar from \"../components/statusbar/Statusbar\";\nimport Footer from \"../components/footer/Footer\";\nimport LoadButton from \"../components/buttons/LoadButton/LoadButton\";\nimport PopupArticle from \"../components/popups/popup-article/PopupArticle\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Label from \"../components/label/Label\";\n\n//functions\nimport { cloudSumArticle } from \"../database/cloud\";\n\nconst columns = [\n  {\n    field: \"title\",\n    headerName: \"TITLE\",\n    width: 650,\n    editable: false,\n  },\n  {\n    field: \"section\",\n    headerName: \"SECTION\",\n    width: 200,\n    editable: false,\n    renderCell: (params) => <Label sectionName={params.value} />,\n  },\n  {\n    field: \"status\",\n    headerName: \"STATUS\",\n    width: 250,\n    editable: false,\n    renderCell: (params) => <Statusbar status={params.value} />,\n  },\n  {\n    field: \"deadline\",\n    headerName: \"DEADLINE\",\n    sortable: true,\n    width: 140,\n  },\n];\n\nconst Articles = () => {\n  //this line is needed to test the popup on article page\n  const [length, setLength] = useState();\n  const [articleTable, setArticleTable] = useState();\n  const [cloudResult, setCloudResult] = useState()\n\n  useEffect(() => {\n    fetchIdeas();\n  }, []);\n\n  useEffect(() => {\n    cloudSumArticle().then((sum) => {\n      setCloudResult(sum)\n    })\n  }, []);\n\n  async function fetchIdeas() {\n    const query = new Parse.Query(\"Article\");\n    try {\n      const article = await query.find();\n      console.log(\"Parse Objects: \", article);\n      const destructuredArticles = destructureArticle(article);\n      setArticleTable(destructuredArticles);\n      console.log(\"from readIdeas: \", articleTable);\n      return true;\n    } catch (error) {\n      alert(`Error is this errortest ${error.message}`);\n      return false;\n    }\n  }\n\n  function destructure(article) {\n    return {\n      id: article.id,\n      title: article.get(\"title\"),\n      section: article.get(\"section\"),\n      deadline: article.get(\"deadline\"),\n      status: article.get(\"status\"),\n    };\n  }\n\n  function destructureArticle(articles) {\n    return articles.map(destructure);\n  }\n\n  return (\n    <>\n      <div className=\"list\">\n        <h1>Article list</h1>\n        <div className=\"list-table\" />\n        <DataGrid\n          rows={articleTable}\n          columns={columns}\n          pageSize={100}\n          rowsPerPageOptions={[100]}\n        />\n      </div>\n      <PopupArticle />\n      <div className=\"footer-container\">\n        <div className=\"footer-btns\">\n          <LoadButton text=\"Load more Articles\" />\n          <p>Total Articles: {cloudResult}</p>\n        </div>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nexport default Articles;\n","export default __webpack_public_path__ + \"static/media/login_image.c688701f.jpg\";","import React, {useState} from \"react\";\nimport Parse from \"parse\";\nimport { Form, Button } from \"react-bootstrap\";\n\n// Styles\nimport \"./Login.css\";\n\n// Images\nimport img from \"../../images/login_image.jpg\"\n\n\nfunction Login(props) {\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n\n  function handleLoginAttempt(e) {\n    e.preventDefault();\n    console.log(\"prevented default\");\n    console.log(username);\n    console.log(password);\n\n    const user = new Parse.User();\n\n    user.setPassword(password);\n    user.setUsername(username);\n\n    user.logIn().then((loggedInUser) => {\n      console.log(loggedInUser);\n      props.setIsLoggedIn(true)\n    });\n  }\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"image-container\">\n        <img src={img} alt= \"login-screen-image\"/>\n      </div>\n\n      <Form className=\"login-form\">\n        <div className=\"login-form-container\">\n          <div className=\"sign-in-container\">\n            <h1> Sign In</h1>\n          </div>\n\n          <div className=\"username-input-container\">\n            <Form.Group className=\"input-field\" controlId=\"formBasicUsername\">\n              <Form.Label>\n                <h6>Username</h6>\n              </Form.Label>\n\n              <Form.Control\n                className=\"input-box\"\n                type=\"text\"\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </Form.Group>\n          </div> \n\n          <div className=\"password-input-container\">\n            <Form.Group className=\"input-field\" controlId=\"formBasicPassword\">\n              <Form.Label>\n                <h6>Password </h6>\n              </Form.Label>\n\n              <Form.Control\n                className=\"input-box\"\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Form.Group>\n          </div>\n\n          <div className=\"submit-container\">\n            <Button\n              className=\"submit-button\"\n              onClick={handleLoginAttempt}\n              variant=\"primary\"\n              type=\"submit\"\n            >\n              Login\n            </Button>\n          </div>\n        </div> \n      </Form>\n    </div> /* closing login page */\n  );\n}\n\nexport default Login;\n","import React from \"react\";\nimport Login from \"../components/login/Login\";\n\nfunction LoginScreen(props) {\n  return (\n    <div>\n      <Login setIsLoggedIn={props.setIsLoggedIn} />\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import React from \"react\";\nimport \"./BottomAvatar.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Parse from \"parse\";\n\n//fix bug: when a user has no image, it does not catch error\n\nfunction BottomAvatar() {\n  const user = Parse.User.current();\n\n  return (\n    <div style={{ display: \"flex\", padding: 10, size: 50 }}>\n      <Avatar\n        style={{\n          border: \"1px non black\",\n          marginTop: -50,\n          marginBottom: 20,\n          marginLeft: 35,\n          height: 70,\n          width: 70,\n        }}\n        alt=\"Profile image\"\n        img\n        src={user.get(\"userimage\").url()}\n      />\n    </div>\n  );\n}\n\nexport default BottomAvatar;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n// Icons\nimport { MdOutlineDashboard } from 'react-icons/md';\nimport { RiArticleLine } from 'react-icons/ri';\nimport { BiBrain } from 'react-icons/bi';\nimport { AiOutlineTeam } from 'react-icons/ai';\n\n// Styles\nimport './NavigationBar.css';\n\n// Components\nimport BottomAvatar from '../bottom-avatar/BottomAvatar';\n\n\n\nfunction NavigationBar() {\n    return (\n        <div>\n            <nav className=\"nav-container\">\n                <ul>\n                    <li>\n                        <Link to=\"/\"><MdOutlineDashboard className = \"navigation_icon\"/>Dashboard</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/articles\"><RiArticleLine className = \"navigation_icon\"/>Articles</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/ideas\"><BiBrain className = \"navigation_icon\"/>Ideas</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/teamplan\"><AiOutlineTeam className = \"navigation_icon\"/>Team Plan</Link>\n                    </li>\n                </ul>\n            </nav>\n                <div>\n                    <BottomAvatar className = \"avatar_icon\"/>\n                </div>\n        </div>\n\n    );\n};\n\nexport default NavigationBar;","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n// Styles \nimport \"./Logout.css\";\n\nfunction Logout(props) {\n\n  function handleLogoutAttempt(e) {\n    e.preventDefault();\n    props.setIsLoggedIn(false)\n  }\n\n  return (\n    <div className=\"logout-container\">\n      <Button className =\"logout-button\" onClick={handleLogoutAttempt} > <h5>Sign out</h5></Button>\n    </div>\n  );\n}\n\nexport default Logout;\n","import React, { useState } from \"react\";\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// Styles\nimport \"./App.css\";\n\n// Screens\nimport TeamPlan from \"./screens/TeamPlan\";\nimport Dashboard from \"./screens/Dashboard\";\nimport Ideas from \"./screens/Ideas\";\nimport Articles from \"./screens/Articles\";\nimport LoginScreen from \"./screens/LoginScreen\";\n\n// Components\nimport NavigationBar from \"./components/nav/NavigationBar\";\nimport Logout from \"./components/logout/Logout\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //TODO: Make logout using setIsLoggedIn state hook function\n\n  return !isLoggedIn ? (\n    <LoginScreen setIsLoggedIn={setIsLoggedIn} />\n  ) : (\n    <div className=\"app-content\">\n      <Router>\n        <NavigationBar className=\"navigation-element\" />\n        <Routes className=\"main-content\">\n          <Route path=\"/\" element={<Dashboard />} exact />\n          <Route path=\"/articles\" element={<Articles exact />} />\n          <Route path=\"/ideas\" element={<Ideas />} exact />\n          <Route path=\"/teamplan\" element={<TeamPlan exact />} />\n        </Routes>\n        <Logout className=\"logout-element\" setIsLoggedIn={setIsLoggedIn} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Parse from \"parse\";\n\n// Styles\nimport \"./index.css\";\n\nParse.initialize(\n  `${process.env.REACT_APP_APPLICATION_ID}`,\n  `${process.env.REACT_APP_JAVASCRIPT_KEY}`,\n)\n\nParse.serverURL = \"https://parseapi.back4app.com/\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}